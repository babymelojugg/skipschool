const { VK, Keyboard, MessageContext, Context } = require('vk-io');
const { HearManager } = require('@vk-io/hear');

const vk = new VK({
    token: 'token'
});

const config = require('./config.json');

const bot = new HearManager();
vk.updates.on('message_new', bot.middleware);
const users = [];

bot.hear('–ù–∞—á–∞—Ç—å',  async(next, context) => {
    const user = users.filter(x => x.id === next.senderId)[0];

    if (next.is('message' && next.isOutbox || next.is('message') && next.senderType == 'group')) {
        return;
    }

    if (user) {
        return context();
    }

    const [user_info] = await vk.api.users.get({user_id: next.senderId});
    users.push({
        id: next.senderId,
        firstName: user_info.first_name,
        lastName: user_info.last_name,
    });

    return context();
});


bot.hear('–ù–∞—á–∞—Ç—å', async (context) => {
    const user = users.filter(x => x.id === context.senderId)[0];

    if (!user) {
        return;
    }

	await context.reply({
		message: 'üêî @id' + user.id + '(' + user.firstName + ')' + ', –ø—Ä–∏–≤–µ—Ç! –í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ, —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–≥—É–ª—è—Ç—å —É—á–µ–±—É –∏ —Å–ø–∞—Ç—å –¥–æ–º–∞, –Ω–æ –Ω–µ –º–æ–∂–µ—à—å —Ä–µ—à–∏—Ç—å—Å—è. –ú—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ –≤ —Ä–µ—à–µ–Ω–∏–∏ —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—à–µ–≥–æ —á–∞—Ç-–±–æ—Ç–∞.',
		keyboard: Keyboard.builder()
        //.inline() ‚Äî –¥–µ–ª–∞–µ—Ç –∏–∑ https://i.imgur.com/jHkOwhW.png —ç—Ç–æ https://i.imgur.com/9I5slVv.png
			.textButton({
				label: 'üë• –ü—Ä–æ—Ñ–∏–ª—å',
				payload: {
					command: '–ü—Ä–æ—Ñ–∏–ª—å'
                },
				color: Keyboard.PRIMARY_COLOR
			})
			.textButton({
				label: 'üóí –ü–æ–º–æ—â—å',
				payload: {
					command: '–ü–æ–º–æ—â—å'
				},
				color: Keyboard.POSITIVE_COLOR
			})
            .row()
			.textButton({
				label: 'üí§ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ª–∏ —Å–µ–≥–æ–¥–Ω—è —É—á–µ–±—É?',
				payload: {
					command: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ª–∏ —Å–µ–≥–æ–¥–Ω—è —É—á–µ–±—É'
				},
				color: Keyboard.SECONDARY_COLOR
			})
	});
});

bot.hear(/–ü—Ä–æ—Ñ–∏–ª—å/i,  async(context, next) => {
    const user = users.filter(x => x.id === context.senderId)[0];

    if (!user) {
        return;
    }

    context.reply('üëÅ –ü—Ä–æ—Ñ–∏–ª—å: @id' + user.id + '(' + user.firstName + ' ' + user.lastName + ')' + '\n\n' + 'üìÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π: user.skipdays' + '\n' + 'üìÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π: user.noskipdays');
});

bot.hear(/–ü–æ–º–æ—â—å/i,  async(context, next) => {
    const user = users.filter(x => x.id === context.senderId)[0];

    if (!user) {
        return;
    }

    context.reply('üïµ‚Äç‚ôÄ –ß—Ç–æ –∑–∞ –±–æ—Ç "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ª–∏ —Å–µ–≥–æ–¥–Ω—è —É—á–µ–±—É?" –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω –Ω—É–∂–µ–Ω? –ë–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å, —Å—Ç–æ–∏—Ç –ª–∏ –ø–æ—Å–µ—â–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è –≤–∞—à–µ —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –∏–ª–∏ –Ω–µ—Ç.\n\nüïµ‚Äç‚ôÇ –í—ã –ø–æ–¥–∫—Ä—É—á–∏–≤–∞–µ—Ç–µ –ø—Ä–æ–ø—É—Å–∫ —É—á–µ–±—ã? –ù–µ—Ç, —É –Ω–∞—Å –≤—Å–µ —Å–¥–µ–ª–∞–Ω–æ –Ω–∞ —á–∏—Å—Ç–µ–π—à–µ–º —Ä–∞–Ω–¥–æ–º–µ. –ï—Å–ª–∏ —É –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è –≤—ã–ø–∞–ª –ø—Ä–æ–ø—É—Å–∫, —Ç–æ –∑–Ω–∞—á–∏—Ç —Ç–∞–∫ —Ä–∞—Å–ø–æ—Ä—è–¥–∏–ª–∞—Å—å —Å—É–¥—å–±–∞.\n\nü§ñ –î–ª—è —á–µ–≥–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç "–ü—Ä–æ—Ñ–∏–ª—å"? –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –í—ã –º–æ–≥–ª–∏ –∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –±—ã–ª–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ/–Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.');
});

bot.hear(/–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ª–∏ —Å–µ–≥–æ–¥–Ω—è —É—á–µ–±—É?/i,  async(context, next) => {
    const user = users.filter(x => x.id === context.senderId)[0];

    if (!user) {
        return;
    }

    var arr = ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É—á–µ–±—É', '–Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —É—á–µ–±—É'];
    var rand = Math.round(Math.random());

    context.reply('@id' + user.id + '(' + user.firstName + '), ' + '—Å–µ–≥–æ–¥–Ω—è –º—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Ç–µ–±–µ ‚Äî ' + arr[rand] + '. –ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —ç—Ç–æ –ø–æ–π–¥–µ—Ç —Ç–µ–±–µ –Ω–∞ –ø–æ–ª—å–∑—É. üôÇ');
});

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
vk.updates.start().catch(console.error);